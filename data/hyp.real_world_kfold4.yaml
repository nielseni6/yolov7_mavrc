lr0: 0.001  # initial learning rate (SGD=1E-2, Adam=1E-3)
lrf: 0.001  # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.937  # SGD momentum/Adam beta1
weight_decay: 0.0005  # optimizer weight decay 5e-4
warmup_epochs: 3.0  # warmup epochs (fractions ok)
warmup_momentum: 0.8  # warmup initial momentum
warmup_bias_lr: 0.1  # warmup initial bias lr
box: 0.05  # box loss gain
cls: 0.75  # cls loss gain
cls_pw: 1.0  # cls BCELoss positive_weight
obj: 1.5  # obj loss gain (scale with pixels)
obj_pw: 1.0  # obj BCELoss positive_weight
iou_t: 0.20  # IoU training threshold
anchor_t: 4.0  # anchor-multiple threshold
# anchors: 3  # anchors per output layer (0 to ignore)
fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
hsv_h: 0.015  # image HSV-Hue augmentation (fraction)
hsv_s: 0.7  # image HSV-Saturation augmentation (fraction)
hsv_v: 0.4  # image HSV-Value augmentation (fraction)
degrees: 0.0  # image rotation (+/- deg)
translate: 0.1  # image translation (+/- fraction)
scale: 0.5  # image scale (+/- gain)
shear: 0.0  # image shear (+/- deg)
perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
flipud: 0.0  # image flip up-down (probability)
fliplr: 0.5  # image flip left-right (probability)
mosaic: 1.0  # image mosaic (probability)
mixup: 0.05  # image mixup (probability)
copy_paste: 0.0  # image copy paste (probability)
paste_in: 0.05  # image copy paste (probability), use 0 for faster training
loss_ota: 1 # use ComputeLossOTA, use 0 for faster training

path: ../../../../data/nielseni6/drone_data # dataset root dir
train: [../../../../data/nielseni6/drone_data/k_fold0/images,
../../../../data/nielseni6/drone_data/k_fold1/images,
../../../../data/nielseni6/drone_data/k_fold2/images,
../../../../data/nielseni6/drone_data/k_fold3/images,
../../../../data/nielseni6/drone_data/k_fold5/images,
../../../../data/nielseni6/drone_data/k_fold6/images,
../../../../data/nielseni6/drone_data/k_fold7/images,
../../../../data/nielseni6/drone_data/k_fold8/images,
../../../../data/nielseni6/drone_data/k_fold9/images]  # train images (relative to 'path') 128 images
val: ../../../../data/nielseni6/drone_data/k_fold4/images  # val images (relative to 'path') 128 images
test: ../../../../data/nielseni6/drone_data/k_fold4/images

# Classes
nc: 2  # Num Clases
names: ['AIRPLANE', 'DRONE'] # Class Namesz